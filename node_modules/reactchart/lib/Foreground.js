'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var utils = require('./core/utils.js');
var imUtils = require('./core/im-utils.js');
var sptr = require('./core/space-transf.js');

var Foreground = function (_React$Component) {
	_inherits(Foreground, _React$Component);

	function Foreground() {
		_classCallCheck(this, Foreground);

		return _possibleConstructorReturn(this, (Foreground.__proto__ || Object.getPrototypeOf(Foreground)).apply(this, arguments));
	}

	_createClass(Foreground, [{
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate(props) {
			return !imUtils.isEqual(props.state, this.props.state);
		}
	}, {
		key: 'render',
		value: function render() {
			if (utils.isNil(this.props.state.content)) {
				return null;
			}
			var wxc = utils.isNil(this.props.state.x) ? utils.isNil(this.props.state.ix) ? this.props.state.cx - this.props.state.width / 2 + this.props.pWidth / 2 : //pixels
			sptr.fromPic(this.props.state.ds.x, this.props.state.ix) : // implicit system
			sptr.toC(this.props.state.ds.x, this.props.state.x); // data space
			var wyc = utils.isNil(this.props.state.y) ? utils.isNil(this.props.state.iy) ? this.props.state.cy + this.props.state.height / 2 + this.props.pHeight / 2 : //pixels
			sptr.fromPic(this.props.state.ds.y, this.props.state.iy) : // implicit
			sptr.toC(this.props.state.ds.y, this.props.state.y);
			var trans = 'translate(' + wxc + ',' + wyc + ')';
			return React.createElement(
				'g',
				_extends({ transform: trans }, this.props.state),
				this.props.state.content()
			);
		}
	}]);

	return Foreground;
}(React.Component);

module.exports = Foreground;